/*
 * CryptoWeather
 * The CryptoWeather API allows for access to all of the cryptocurrency data and market forecast services provided. There are two primary categories of routes, `public` and `private`, where `public` routes are accessible to the general public and do not require API authentication, and `private` routes, which require API authentication.  ## General Overview  1. All API methods adhere to RESTful best practices as closely as possible. As such, all API calls will be made via the standard HTTP protocol using the GET/POST/PUT/DELETE request types.  2. Every request returns the status as a JSON response with the following:     - success, true if it was successful     - code, the http status code (also in the response header)         - 200 if response is successful         - 400 if bad request         - 401 if authorization JWT is wrong or limit exceeded         - 404 wrong route         - 500 for any internal errors     - status, the status of the request, default **success**     - errors, an array of any relevant error details  3. For any requests that are not successful an error message is specified and returned as an array for the **errors** key in the JSON response.  4. All authentication uses JSON Web Tokens (JWT), which is set as the **Authorization** entry in the header, see the following for more details.     - http://jwt.io     - https://scotch.io/tutorials/the-anatomy-of-a-json-web-token  ## Code Example  The following is a code example in Python, which demonstrates using the [Python Requests library](https://requests.readthedocs.io/en/master/) for both the `public` and `private` API routes.  ``` import requests  HOST = \"https://api.cryptoweather.ai/v1\"  # Your API key (JWT) API_KEY = \"<YOUR API KEY>\"  # Example public request, no API key required. requests.get(\"{}/public/symbols\".format(HOST)).json()  # Get the current btc price using the public route requests.get(\"{}/public/price-current/{}\".format(HOST, \"btc\")).json()   # Example private request, API key required. Get the btc hourly forecasts headers = {\"Authorization\": \"Bearer {}\".format(API_KEY)} requests.get(\"{}/private/forecast/{}/{}\".format(HOST, \"btc\", \"1h\"),              headers=headers).json() ```
 *
 * OpenAPI spec version: 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccuracyRoute', 'model/DefaultResponse', 'model/ForecastRoute', 'model/PriceChangeRoute', 'model/PriceCurrentRoute', 'model/PriceHistoryRoute', 'model/PrivateAccuracyResponse', 'model/PrivateAccuracyResponseData', 'model/PrivateForecastResponse', 'model/PrivateForecastResponseData', 'model/PrivateForecastResponseDataForecast', 'model/PrivateTrendTabularResponse', 'model/PrivateTrendTabularResponseData', 'model/PrivateTrendTabularResponseDataTrendTabular', 'model/PublicPriceChangeResponse', 'model/PublicPriceChangeResponseData', 'model/PublicPriceChangeResponseDataPriceChange', 'model/PublicPriceCurrentResponse', 'model/PublicPriceCurrentResponseData', 'model/PublicPriceCurrentResponseDataCurrent', 'model/PublicPriceHistoryResponse', 'model/PublicPriceHistoryResponseData', 'model/PublicPriceHistoryResponseDataHistory', 'model/PublicPriceHistoryResponseDataPriceHistory', 'model/PublicSymbolsResponse', 'model/PublicSymbolsResponseData', 'model/PublicSymbolsResponseDataSymbols', 'model/PublicTrendResponse', 'model/PublicTrendResponseData', 'model/PublicTrendResponseDataTrend', 'model/SymbolsRoute', 'model/TrendRoute', 'model/TrendTabluarRoute', 'api/PrivateApi', 'api/PublicApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccuracyRoute'), require('./model/DefaultResponse'), require('./model/ForecastRoute'), require('./model/PriceChangeRoute'), require('./model/PriceCurrentRoute'), require('./model/PriceHistoryRoute'), require('./model/PrivateAccuracyResponse'), require('./model/PrivateAccuracyResponseData'), require('./model/PrivateForecastResponse'), require('./model/PrivateForecastResponseData'), require('./model/PrivateForecastResponseDataForecast'), require('./model/PrivateTrendTabularResponse'), require('./model/PrivateTrendTabularResponseData'), require('./model/PrivateTrendTabularResponseDataTrendTabular'), require('./model/PublicPriceChangeResponse'), require('./model/PublicPriceChangeResponseData'), require('./model/PublicPriceChangeResponseDataPriceChange'), require('./model/PublicPriceCurrentResponse'), require('./model/PublicPriceCurrentResponseData'), require('./model/PublicPriceCurrentResponseDataCurrent'), require('./model/PublicPriceHistoryResponse'), require('./model/PublicPriceHistoryResponseData'), require('./model/PublicPriceHistoryResponseDataHistory'), require('./model/PublicPriceHistoryResponseDataPriceHistory'), require('./model/PublicSymbolsResponse'), require('./model/PublicSymbolsResponseData'), require('./model/PublicSymbolsResponseDataSymbols'), require('./model/PublicTrendResponse'), require('./model/PublicTrendResponseData'), require('./model/PublicTrendResponseDataTrend'), require('./model/SymbolsRoute'), require('./model/TrendRoute'), require('./model/TrendTabluarRoute'), require('./api/PrivateApi'), require('./api/PublicApi'));
  }
}(function(ApiClient, AccuracyRoute, DefaultResponse, ForecastRoute, PriceChangeRoute, PriceCurrentRoute, PriceHistoryRoute, PrivateAccuracyResponse, PrivateAccuracyResponseData, PrivateForecastResponse, PrivateForecastResponseData, PrivateForecastResponseDataForecast, PrivateTrendTabularResponse, PrivateTrendTabularResponseData, PrivateTrendTabularResponseDataTrendTabular, PublicPriceChangeResponse, PublicPriceChangeResponseData, PublicPriceChangeResponseDataPriceChange, PublicPriceCurrentResponse, PublicPriceCurrentResponseData, PublicPriceCurrentResponseDataCurrent, PublicPriceHistoryResponse, PublicPriceHistoryResponseData, PublicPriceHistoryResponseDataHistory, PublicPriceHistoryResponseDataPriceHistory, PublicSymbolsResponse, PublicSymbolsResponseData, PublicSymbolsResponseDataSymbols, PublicTrendResponse, PublicTrendResponseData, PublicTrendResponseDataTrend, SymbolsRoute, TrendRoute, TrendTabluarRoute, PrivateApi, PublicApi) {
  'use strict';

  /**
   * The_CryptoWeather_API_allows_for_access_to_all_of_the_cryptocurrency_data_and_market_forecast_services_provided__There_are_two_primary_categories_of_routes_public_and_private_where_public_routes_are_accessible_to_the_general_public_and_do_not_require_API_authentication_and_private_routes_which_require_API_authentication__General_Overview1__All_API_methods_adhere_to_RESTful_best_practices_as_closely_as_possible__As_such_all_API_calls_will_be_made_via_the_standard_HTTP_protocol_using_the_GETPOSTPUTDELETE_request_types_2__Every_request_returns_the_status_as_a_JSON_response_with_the_following______success_true_if_it_was_successful______code_the_http_status_code__also_in_the_response_header__________200_if_response_is_successful__________400_if_bad_request__________401_if_authorization_JWT_is_wrong_or_limit_exceeded__________404_wrong_route__________500_for_any_internal_errors______status_the_status_of_the_request_default_success______errors_an_array_of_any_relevant_error_details3__For_any_requests_that_are_not_successful_an_error_message_is_specified_and_returned_as_an_array_for_the_errors_key_in_the_JSON_response_4__All_authentication_uses_JSON_Web_Tokens__JWT_which_is_set_as_the_Authorization_entry_in_the_header_see_the_following_for_more_details_______httpjwt_io______httpsscotch_iotutorialsthe_anatomy_of_a_json_web_token_Code_ExampleThe_following_is_a_code_example_in_Python_which_demonstrates_using_the__Python_Requests_library_httpsrequests_readthedocs_ioenmaster_for_both_the_public_and_private_API_routes_import_requestsHOST__httpsapi_cryptoweather_aiv1_Your_API_key__JWTAPI_KEY__YOUR_API_KEY_Example_public_request_no_API_key_required_requests_get_publicsymbols_format_HOST_json__Get_the_current_btc_price_using_the_public_routerequests_get_publicprice_current_format_HOST_btc_json__Example_private_request_API_key_required__Get_the_btc_hourly_forecastsheaders__Authorization_Bearer__format_API_KEYrequests_get_privateforecast_format_HOST_btc_1h_____________headersheaders_json_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var CryptoWeather = require('index'); // See note below*.
   * var xxxSvc = new CryptoWeather.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new CryptoWeather.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new CryptoWeather.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new CryptoWeather.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccuracyRoute model constructor.
     * @property {module:model/AccuracyRoute}
     */
    AccuracyRoute: AccuracyRoute,
    /**
     * The DefaultResponse model constructor.
     * @property {module:model/DefaultResponse}
     */
    DefaultResponse: DefaultResponse,
    /**
     * The ForecastRoute model constructor.
     * @property {module:model/ForecastRoute}
     */
    ForecastRoute: ForecastRoute,
    /**
     * The PriceChangeRoute model constructor.
     * @property {module:model/PriceChangeRoute}
     */
    PriceChangeRoute: PriceChangeRoute,
    /**
     * The PriceCurrentRoute model constructor.
     * @property {module:model/PriceCurrentRoute}
     */
    PriceCurrentRoute: PriceCurrentRoute,
    /**
     * The PriceHistoryRoute model constructor.
     * @property {module:model/PriceHistoryRoute}
     */
    PriceHistoryRoute: PriceHistoryRoute,
    /**
     * The PrivateAccuracyResponse model constructor.
     * @property {module:model/PrivateAccuracyResponse}
     */
    PrivateAccuracyResponse: PrivateAccuracyResponse,
    /**
     * The PrivateAccuracyResponseData model constructor.
     * @property {module:model/PrivateAccuracyResponseData}
     */
    PrivateAccuracyResponseData: PrivateAccuracyResponseData,
    /**
     * The PrivateForecastResponse model constructor.
     * @property {module:model/PrivateForecastResponse}
     */
    PrivateForecastResponse: PrivateForecastResponse,
    /**
     * The PrivateForecastResponseData model constructor.
     * @property {module:model/PrivateForecastResponseData}
     */
    PrivateForecastResponseData: PrivateForecastResponseData,
    /**
     * The PrivateForecastResponseDataForecast model constructor.
     * @property {module:model/PrivateForecastResponseDataForecast}
     */
    PrivateForecastResponseDataForecast: PrivateForecastResponseDataForecast,
    /**
     * The PrivateTrendTabularResponse model constructor.
     * @property {module:model/PrivateTrendTabularResponse}
     */
    PrivateTrendTabularResponse: PrivateTrendTabularResponse,
    /**
     * The PrivateTrendTabularResponseData model constructor.
     * @property {module:model/PrivateTrendTabularResponseData}
     */
    PrivateTrendTabularResponseData: PrivateTrendTabularResponseData,
    /**
     * The PrivateTrendTabularResponseDataTrendTabular model constructor.
     * @property {module:model/PrivateTrendTabularResponseDataTrendTabular}
     */
    PrivateTrendTabularResponseDataTrendTabular: PrivateTrendTabularResponseDataTrendTabular,
    /**
     * The PublicPriceChangeResponse model constructor.
     * @property {module:model/PublicPriceChangeResponse}
     */
    PublicPriceChangeResponse: PublicPriceChangeResponse,
    /**
     * The PublicPriceChangeResponseData model constructor.
     * @property {module:model/PublicPriceChangeResponseData}
     */
    PublicPriceChangeResponseData: PublicPriceChangeResponseData,
    /**
     * The PublicPriceChangeResponseDataPriceChange model constructor.
     * @property {module:model/PublicPriceChangeResponseDataPriceChange}
     */
    PublicPriceChangeResponseDataPriceChange: PublicPriceChangeResponseDataPriceChange,
    /**
     * The PublicPriceCurrentResponse model constructor.
     * @property {module:model/PublicPriceCurrentResponse}
     */
    PublicPriceCurrentResponse: PublicPriceCurrentResponse,
    /**
     * The PublicPriceCurrentResponseData model constructor.
     * @property {module:model/PublicPriceCurrentResponseData}
     */
    PublicPriceCurrentResponseData: PublicPriceCurrentResponseData,
    /**
     * The PublicPriceCurrentResponseDataCurrent model constructor.
     * @property {module:model/PublicPriceCurrentResponseDataCurrent}
     */
    PublicPriceCurrentResponseDataCurrent: PublicPriceCurrentResponseDataCurrent,
    /**
     * The PublicPriceHistoryResponse model constructor.
     * @property {module:model/PublicPriceHistoryResponse}
     */
    PublicPriceHistoryResponse: PublicPriceHistoryResponse,
    /**
     * The PublicPriceHistoryResponseData model constructor.
     * @property {module:model/PublicPriceHistoryResponseData}
     */
    PublicPriceHistoryResponseData: PublicPriceHistoryResponseData,
    /**
     * The PublicPriceHistoryResponseDataHistory model constructor.
     * @property {module:model/PublicPriceHistoryResponseDataHistory}
     */
    PublicPriceHistoryResponseDataHistory: PublicPriceHistoryResponseDataHistory,
    /**
     * The PublicPriceHistoryResponseDataPriceHistory model constructor.
     * @property {module:model/PublicPriceHistoryResponseDataPriceHistory}
     */
    PublicPriceHistoryResponseDataPriceHistory: PublicPriceHistoryResponseDataPriceHistory,
    /**
     * The PublicSymbolsResponse model constructor.
     * @property {module:model/PublicSymbolsResponse}
     */
    PublicSymbolsResponse: PublicSymbolsResponse,
    /**
     * The PublicSymbolsResponseData model constructor.
     * @property {module:model/PublicSymbolsResponseData}
     */
    PublicSymbolsResponseData: PublicSymbolsResponseData,
    /**
     * The PublicSymbolsResponseDataSymbols model constructor.
     * @property {module:model/PublicSymbolsResponseDataSymbols}
     */
    PublicSymbolsResponseDataSymbols: PublicSymbolsResponseDataSymbols,
    /**
     * The PublicTrendResponse model constructor.
     * @property {module:model/PublicTrendResponse}
     */
    PublicTrendResponse: PublicTrendResponse,
    /**
     * The PublicTrendResponseData model constructor.
     * @property {module:model/PublicTrendResponseData}
     */
    PublicTrendResponseData: PublicTrendResponseData,
    /**
     * The PublicTrendResponseDataTrend model constructor.
     * @property {module:model/PublicTrendResponseDataTrend}
     */
    PublicTrendResponseDataTrend: PublicTrendResponseDataTrend,
    /**
     * The SymbolsRoute model constructor.
     * @property {module:model/SymbolsRoute}
     */
    SymbolsRoute: SymbolsRoute,
    /**
     * The TrendRoute model constructor.
     * @property {module:model/TrendRoute}
     */
    TrendRoute: TrendRoute,
    /**
     * The TrendTabluarRoute model constructor.
     * @property {module:model/TrendTabluarRoute}
     */
    TrendTabluarRoute: TrendTabluarRoute,
    /**
     * The PrivateApi service constructor.
     * @property {module:api/PrivateApi}
     */
    PrivateApi: PrivateApi,
    /**
     * The PublicApi service constructor.
     * @property {module:api/PublicApi}
     */
    PublicApi: PublicApi
  };

  return exports;
}));
